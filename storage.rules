rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    function getUserRole() {
      return request.auth != null ?
        firestore.get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role : null;
    }

    function isAdmin() {
      return getUserRole() == 'admin';
    }

    // **FIXED LOGIC**: Trainee access now depends on their ability to see the case in Firestore,
    // not on whether they have already submitted a result.
    function traineeHasAccessToCase(caseId) {
        let caseDoc = firestore.get(/databases/$(database)/documents/artifacts/auditsim-pro-main-4/public/data/cases/$(caseId)).data;
        return getUserRole() == 'trainee' &&
               caseDoc._deleted == false &&
               (caseDoc.visibleToUserIds == null || caseDoc.visibleToUserIds.size() == 0 || request.auth.uid in caseDoc.visibleToUserIds);
    }

    match /artifacts/{appId}/case_documents/{caseId}/{fileName} {
      // Admins can always read. Trainees can read if they have access to the case.
      allow read: if isAdmin() || traineeHasAccessToCase(caseId);

      // Only admins can write/upload files.
      allow write: if isAdmin() &&
                   request.resource.contentType.matches('application/pdf') &&
                   request.resource.size < 5 * 1024 * 1024; // 5MB limit
    }
  }
}
