rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function getUserRole() {
      return get(/databases/$(database)/documents/roles/$(request.auth.uid)).data.role;
    }
    function isAuthenticated() {
      return request.auth != null;
    }
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }
    function isTrainee() {
      return isAuthenticated() && getUserRole() == 'trainee';
    }

    // --- Roles ---
    match /roles/{uid} {
      allow read, write: if isOwner(uid);
    }

    // --- User Profiles & Submissions ---
    match /artifacts/{appId}/users/{userId}/{path=**} {
        allow read, list: if isAdmin() || isOwner(userId);
        allow write: if isOwner(userId);
    }
    
    // --- Cases ---
    match /artifacts/{appId}/public/data/cases/{caseId} {
      // Allow any authenticated user to list cases.
      // The client-side queries and specific 'get' rules will handle filtering.
      allow list: if isAuthenticated();

      // Get rule: Admins can get any case.
      // Trainees can get non-deleted cases if they have access.
      allow get: if isAdmin() || (isTrainee() &&
        resource.data._deleted == false &&
        (resource.data.visibleToUserIds == null || resource.data.visibleToUserIds.size() == 0 || request.auth.uid in resource.data.visibleToUserIds)
      );

      // Create rule: Fixed by removing the check against `request.time`.
      allow create: if isAdmin() &&
        request.resource.data.createdBy == request.auth.uid &&
        request.resource.data.caseName is string && request.resource.data.caseName.size() > 0 &&
        request.resource.data.disbursements is list &&
        request.resource.data.invoiceMappings is list &&
        request.resource.data.visibleToUserIds is list &&
        request.resource.data.get('_deleted', false) == false;

      // Update rule: Simplified and ensures createdBy/At are not changed.
      allow update: if isAdmin() &&
        request.resource.data.updatedAt == request.time &&
        request.resource.data.createdBy == resource.data.createdBy &&
        request.resource.data.createdAt == resource.data.createdAt;

      allow delete: if false; // Soft deletes are handled by 'update'
    }
  }
}
